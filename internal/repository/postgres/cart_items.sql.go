// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: cart_items.sql

package postgres

import (
	"context"
)

const getCarItemsByCartIdAmdProductid = `-- name: GetCarItemsByCartIdAmdProductid :one
SELECT taci_id, taci_cart_id, taci_product_id, taci_qty, taci_price
FROM public.tb_amole_cart_items WHERE taci_cart_id=$1 AND taci_product_id = $2
`

type GetCarItemsByCartIdAmdProductidParams struct {
	TaciCartID    int32 `json:"taci_cart_id"`
	TaciProductID int32 `json:"taci_product_id"`
}

func (q *Queries) GetCarItemsByCartIdAmdProductid(ctx context.Context, arg GetCarItemsByCartIdAmdProductidParams) (TbAmoleCartItem, error) {
	row := q.db.QueryRow(ctx, getCarItemsByCartIdAmdProductid, arg.TaciCartID, arg.TaciProductID)
	var i TbAmoleCartItem
	err := row.Scan(
		&i.TaciID,
		&i.TaciCartID,
		&i.TaciProductID,
		&i.TaciQty,
		&i.TaciPrice,
	)
	return i, err
}

const insertCartItemsByCartId = `-- name: InsertCartItemsByCartId :one
INSERT INTO public.tb_amole_cart_items
(taci_cart_id, taci_product_id, taci_qty, taci_price)
VALUES($1, $2, $3, $4) RETURNING taci_id, taci_cart_id, taci_product_id, taci_qty, taci_price
`

type InsertCartItemsByCartIdParams struct {
	TaciCartID    int32 `json:"taci_cart_id"`
	TaciProductID int32 `json:"taci_product_id"`
	TaciQty       int32 `json:"taci_qty"`
	TaciPrice     int32 `json:"taci_price"`
}

func (q *Queries) InsertCartItemsByCartId(ctx context.Context, arg InsertCartItemsByCartIdParams) (TbAmoleCartItem, error) {
	row := q.db.QueryRow(ctx, insertCartItemsByCartId,
		arg.TaciCartID,
		arg.TaciProductID,
		arg.TaciQty,
		arg.TaciPrice,
	)
	var i TbAmoleCartItem
	err := row.Scan(
		&i.TaciID,
		&i.TaciCartID,
		&i.TaciProductID,
		&i.TaciQty,
		&i.TaciPrice,
	)
	return i, err
}

const updateCartItemByCartId = `-- name: UpdateCartItemByCartId :exec
UPDATE public.tb_amole_cart_items
SET taci_product_id=$2, taci_qty=$3, taci_price=$4
WHERE taci_id=$1
`

type UpdateCartItemByCartIdParams struct {
	TaciID        int64 `json:"taci_id"`
	TaciProductID int32 `json:"taci_product_id"`
	TaciQty       int32 `json:"taci_qty"`
	TaciPrice     int32 `json:"taci_price"`
}

func (q *Queries) UpdateCartItemByCartId(ctx context.Context, arg UpdateCartItemByCartIdParams) error {
	_, err := q.db.Exec(ctx, updateCartItemByCartId,
		arg.TaciID,
		arg.TaciProductID,
		arg.TaciQty,
		arg.TaciPrice,
	)
	return err
}
